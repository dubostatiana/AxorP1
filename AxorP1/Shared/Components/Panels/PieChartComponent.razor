
@* PIE CHART FOR STATISTICS  *@

@if (IsParentCreated)
{
    <SfAccumulationChart @ref="PieChartRef" ID="@PieChartId" Theme="@ChartTheme" SelectionMode="AccumulationSelectionMode.Point" EnableBorderOnMouseMove="true" EnableAnimation="true" Width="100%" Height="100%">

        <AccumulationChartTooltipSettings @attributes="@ToolTipAttributes"></AccumulationChartTooltipSettings>

        <AccumulationChartLegendSettings @attributes="@LegendAttributes" ToggleVisibility="false" TextWrap="TextWrap.Wrap"  >     
        </AccumulationChartLegendSettings>

        <AccumulationChartSeriesCollection>

            <AccumulationChartSeries @attributes="@SeriesAttributes" InnerRadius="40%">
                <AccumulationDataLabelSettings @attributes="@LabelAttributes">
                    <AccumulationChartDataLabelFont Color="white"></AccumulationChartDataLabelFont>
                </AccumulationDataLabelSettings>
            </AccumulationChartSeries>

        </AccumulationChartSeriesCollection>

    </SfAccumulationChart>
}


@code {

    private SfAccumulationChart? PieChartRef;
    private bool IsParentCreated { get; set; } = false;  // Initiate the render only if the parent has been created

    [Parameter] public string PieChartId { get; set; } = string.Empty;
    [Parameter] public Syncfusion.Blazor.Theme ChartTheme { get; set; } = Syncfusion.Blazor.Theme.Fluent;

    [Parameter] public Dictionary<string, object>? ToolTipAttributes { get; set; }
    [Parameter] public Dictionary<string, object>? LegendAttributes { get; set; }

    [Parameter] public Dictionary<string, object>? SeriesAttributes { get; set; }
    [Parameter] public Dictionary<string, object>? LabelAttributes { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    public void Refresh()
    {
        if (!IsParentCreated)
        {
            IsParentCreated = true;
            StateHasChanged();
        }

        PieChartRef?.Refresh();
    }

    protected override bool ShouldRender()
    {
        base.ShouldRender();

        // Check if any points are selected in the chart
        if (PieChartRef?.SelectedDataIndexes == null)
        {
            return true; // Render when no points are selected
        }
        else
        {
            return false;
        }
    }

    public class PieData
    {
        public string Name { get; set; }
        public double Percentage { get; set; }

    } 
}