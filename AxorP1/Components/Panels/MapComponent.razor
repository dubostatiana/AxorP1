@typeparam MarkerTValue

@* MAP COMPONENT *@

<SfMaps @ref="MapRef" ID="@MapId" Width="100%" Height="100%">

    <MapsEvents OnMarkerClick="@OnMarkerClickEvent"></MapsEvents>
    <MapsTitleSettings Text="@Title"></MapsTitleSettings>

    <MapsLayers>

        <MapsLayer ShapeData="@MapShapeData" TValue="string">

            <MapsMarkerSettings>
                <MapsMarker @attributes="@MarkerAttributes" TValue="@MarkerTValue">
                    <MapsMarkerBorder Width="2" Color="#285255"></MapsMarkerBorder>
                    <MapsMarkerTooltipSettings @attributes="@ToolTipAttributes"></MapsMarkerTooltipSettings>
                </MapsMarker>
            </MapsMarkerSettings>

            <MapsShapeSettings Fill="@FillShape"></MapsShapeSettings>

            <MapsZoomSettings Enable="@EnableZoom">
                <MapsZoomToolbarSettings @attributes="@ZoomToolBarAttributes"></MapsZoomToolbarSettings>
            </MapsZoomSettings>
        </MapsLayer>

    </MapsLayers>

</SfMaps>


@code {

    private SfMaps? MapRef;

    [Parameter] public string MapId { get; set; } = string.Empty;
    [Parameter] public string Title { get; set; } = string.Empty;
    [Parameter] public string FillShape { get; set; } = string.Empty;
    [Parameter] public bool EnableZoom { get; set; } = true;
    [Parameter] public Dictionary<string, object>? MarkerAttributes { get; set; }
    [Parameter] public Dictionary<string, object>? ToolTipAttributes { get; set; }
    [Parameter] public Dictionary<string, object>? ZoomToolBarAttributes { get; set; }


    [Parameter] public EventCallback<MarkerClickEventArgs> OnMarkerClickEvent { get; set; }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    public void Refresh()
    {
        MapRef?.Refresh();
    }


    public class MapDataSettings
    {
        public Boolean async { get; set; }
        public String dataOptions { get; set; }
        public String type { get; set; }
    }

    private MapDataSettings MapShapeData = new MapDataSettings
    {
            async = true,
            type = "GET",
            dataOptions = "maps/north-america.json"
    };


    

}